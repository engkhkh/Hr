@model IEnumerable<Hr.Models.ViewModelMasterwithother>

@{
    ViewData["Title"] = " درجة الدورات   ";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<form asp-action="CreateB2" asp-controller="ViewModelEvalwithother1" method="get">
    <div class="form-actions no-color">
        <p>
            <input type="text" name="SearchString" placeholder=" الرقم الوظيفي او السجل المدني " @*value="@ViewData["CurrentFilter"]"*@ />
            <input type="text" name="b2" placeholder=" أختر التاريخ " class="form-control hijri-date-input" @*value="@ViewData["CurrentFilter"]"*@ />
            <input type="submit" value="بحث" class="btn btn-default" />
            @*<a asp-action="Index">Back to Full List</a>*@
        </p>
    </div>
</form>

<table id="table" class="table table-responsive-lg table-bordered table-condensed table-striped table-hover  sortable">
    <thead>
        <tr>
            @*<th>

                </th>*@
            @*<th>

                </th>*@
            <th>
                رقم الموظف
            </th>
            <th>
                الموظف
            </th>
            <th>
                رقم الطلب
            </th>
            <th>
                الدورة
            </th>
            <th>
                نوع الدورة
            </th>
            <th>
                طريقة الدورة
            </th>
            <th>
                التقدير
            </th>
            <th>
                شهادة الدورة
            </th>
            <th>
                اعتماد الموارد
            </th>
            <th>
                بداية الدورة

            </th>
            <th>
                الحالة
            </th>
            <th>
                عدد ايام  الدورة
            </th>
            @*<th>
                    نسبة الانجاز %
                </th>*@
            <th>
                جهة الدورة
            </th>
            <th>
                جهة تنفيذ التدريب
            </th>
            <th>
                قسم الموظف
            </th>
            <th>
                الدرجة
            </th>
            <th>
                الدرجة الكلية
            </th>

        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <!--<td>-->
                @*<a asp-controller="MasterDetails" asp-action="Create" asp-route-id="@item.MasterDetails.COURCES_IDMASTER">موافق</a> |
                    <a asp-controller="MasterDetails" asp-action="Create2" asp-route-id="@item.MasterDetails.COURCES_IDMASTER">رفض</a>*@
                @*<a asp-controller="MasterDetails" asp-action="Delete" asp-route-id="@item.MasterDetails.MasterDetailsSerial">انتظار </a>*@

                <!--</td>-->
                <!--<td>-->
                @*<a asp-controller="ACourcesMasters" asp-action="Edit111" asp-route-id="@item.ACourcesMasters.EncryptedIdd" class="btn btn-warning">تعديل </a>*@
                <!--</td>-->
                <td>
                    @Html.DisplayFor(modelItem => item.Cemps.Cempid)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Cemps.CEMPNAME)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ACourcesMasters.CourcesIdmaster)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ACourcesNames.CourcesName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ACourcesTypes.CourcesTypeName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ACourcesTrainingMethods.CourcesNameTraining)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ACourcesEstimates.CourcesNameEstimate)
                </td>
                <td>
                    <a href="~/img/portfolio/@item.ACourcesMasters.CourcesIdImagecert" target="_blank" class="btn btn-link">@*<img src="~/img/portfolio/@item.ACourcesMasters.CourcesIdImagecert" class="img-thumbnail" width="20" height="20" />*@تحميل</a>
                    @*@Html.DisplayFor(modelItem => item.CourcesIdImagecert)*@
                </td>
                <td>
                    <a href="~/img/portfoliohr/@item.ACourcesMasters.CourcesIdImagehr" target="_blank" class="btn btn-link">@*<img src="~/img/portfolio/@item.ACourcesMasters.CourcesIdImagehr" class="img-thumbnail" width="20" height="20" />*@تحميل</a>
                    @*@Html.DisplayFor(modelItem => item.CourcesIdImagehr)*@
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ACourcesMasters.CourcesStartDate)
                    @Html.DisplayFor(modelItem => item.ACourcesMasters.CourcesEndDate)
                    @*@Html.DisplayFor(modelItem => item.ACourcesMasters.CourcesStartDateh)*@
                    @*@item.ACourcesMasters.CourcesStartDateh.AddDays(-1).ToShortDateString()*@

                </td>
                <td>
                    @if (item.MasterDetails.MasterRequestTypeSatus == 1)
                    {
                        <label style="background-color:limegreen">موافقة :</label>
                        @Html.DisplayFor(modelItem => item.MasterDetails.MasterRequestNotes)
                    }
                    else if (item.MasterDetails.MasterRequestTypeSatus == 2)
                    {
                        <label style="background-color:red">رفض  :</label>
                        @Html.DisplayFor(modelItem => item.MasterDetails.MasterRequestNotes)

                    }
                    else
                    {
                        <label style="background-color:yellow">انتظار :</label>
                        @Html.DisplayFor(modelItem => item.MasterDetails.MasterRequestNotes)

                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ACourcesMasters.CourcesNumberofdays)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.ACourcesMasters.CourcesPassRate)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.ACourcesDeptouts.CourcesNameDeptout)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ACourcesMasters.COURCES_EXCUTION)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ACourcesDeptins.CourcesNameDeptin)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ACourcesMasters.gradetocourse)
                </td>
                <td>
                    @*@Html.DisplayFor(modelItem => item.ACourcesMasters.gradetocourset)*@
                    @if (@Model.Sum(s => s.ACourcesMasters.gradetocourse) >= 100)
                    {
                        <p>100</p>
                    }
                    else
                    {
                        @Model.Sum(s => s.ACourcesMasters.gradetocourse)
                    }


                </td>
            </tr>
        }
    </tbody>
</table>
<script language="javascript" type="text/javascript">
    $(document).ready(function () {
        try {
            $("input[type='text']").each(function () {
                $(this).attr("autocomplete", "off");
            });
        }
        catch (e) { }
    });

</script>
<script>

    $(document).ready(function () {
        $('#table').DataTable({
            dom: 'Bfrtip',
            buttons: [
                /*'copy', 'csv', 'excel', 'pdf',*/ 'print', 'excel'
            ],
            "language": {
                "emptyTable": "ليست هناك بيانات متاحة في الجدول",
                "loadingRecords": "جارٍ التحميل...",
                "processing": "جارٍ التحميل...",
                "lengthMenu": "أظهر _MENU_ مدخلات",
                "zeroRecords": "لم يعثر على أية سجلات",
                "info": "إظهار _START_ إلى _END_ من أصل _TOTAL_ مدخل",
                "infoEmpty": "يعرض 0 إلى 0 من أصل 0 سجل",
                "infoFiltered": "(منتقاة من مجموع _MAX_ مُدخل)",
                "search": "ابحث:",
                "paginate": {
                    "first": "الأول",
                    "previous": "السابق",
                    "next": "التالي",
                    "last": "الأخير"
                },
                "aria": {
                    "sortAscending": ": تفعيل لترتيب العمود تصاعدياً",
                    "sortDescending": ": تفعيل لترتيب العمود تنازلياً"
                },
                "select": {
                    "rows": {
                        "_": "%d قيمة محددة",
                        "0": "",
                        "1": "1 قيمة محددة"
                    },
                    "1": "%d سطر محدد",
                    "_": "%d أسطر محددة",
                    "cells": {
                        "1": "1 خلية محددة",
                        "_": "%d خلايا محددة"
                    },
                    "columns": {
                        "1": "1 عمود محدد",
                        "_": "%d أعمدة محددة"
                    }
                },
                "buttons": {
                    "print": "طباعة",
                    "copyKeys": "زر <i>ctrl<\/i> أو <i>⌘<\/i> + <i>C<\/i> من الجدول<br>ليتم نسخها إلى الحافظة<br><br>للإلغاء اضغط على الرسالة أو اضغط على زر الخروج.",
                    "copySuccess": {
                        "_": "%d قيمة نسخت",
                        "1": "1 قيمة نسخت"
                    },
                    "pageLength": {
                        "-1": "اظهار الكل",
                        "_": "إظهار %d أسطر"
                    },
                    "collection": "مجموعة",
                    "copy": "نسخ",
                    "copyTitle": "نسخ إلى الحافظة",
                    "csv": "CSV",
                    "excel": "Excel",
                    "pdf": "PDF",
                    "colvis": "إظهار الأعمدة",
                    "colvisRestore": "إستعادة العرض"
                },
                "autoFill": {
                    "cancel": "إلغاء",
                    "info": "مثال عن الملئ التلقائي",
                    "fill": "املأ جميع الحقول بـ <i>%d&lt;\\\/i&gt;<\/i>",
                    "fillHorizontal": "تعبئة الحقول أفقيًا",
                    "fillVertical": "تعبئة الحقول عموديا"
                },
                "searchBuilder": {
                    "add": "اضافة شرط",
                    "clearAll": "ازالة الكل",
                    "condition": "الشرط",
                    "data": "المعلومة",
                    "logicAnd": "و",
                    "logicOr": "أو",
                    "title": [
                        "منشئ البحث"
                    ],
                    "value": "القيمة",
                    "conditions": {
                        "date": {
                            "after": "بعد",
                            "before": "قبل",
                            "between": "بين",
                            "empty": "فارغ",
                            "equals": "تساوي",
                            "not": "ليس",
                            "notBetween": "ليست بين",
                            "notEmpty": "ليست فارغة"
                        },
                        "number": {
                            "between": "بين",
                            "empty": "فارغة",
                            "equals": "تساوي",
                            "gt": "أكبر من",
                            "gte": "أكبر وتساوي",
                            "lt": "أقل من",
                            "lte": "أقل وتساوي",
                            "not": "ليست",
                            "notBetween": "ليست بين",
                            "notEmpty": "ليست فارغة"
                        },
                        "string": {
                            "contains": "يحتوي",
                            "empty": "فاغ",
                            "endsWith": "ينتهي ب",
                            "equals": "يساوي",
                            "not": "ليست",
                            "notEmpty": "ليست فارغة",
                            "startsWith": " تبدأ بـ "
                        }
                    },
                    "button": {
                        "0": "فلاتر البحث",
                        "_": "فلاتر البحث (%d)"
                    },
                    "deleteTitle": "حذف فلاتر"
                },
                "searchPanes": {
                    "clearMessage": "ازالة الكل",
                    "collapse": {
                        "0": "بحث",
                        "_": "بحث (%d)"
                    },
                    "count": "عدد",
                    "countFiltered": "عدد المفلتر",
                    "loadMessage": "جارِ التحميل ...",
                    "title": "الفلاتر النشطة"
                },
                "searchPlaceholder": "ابحث ..."
            }
        });
    });

</script>
<link href="~/datepicker/dist/css/bootstrap-datetimepicker.css" rel="stylesheet" />
<link href="~/DataTables (1)/datatables.css" rel="stylesheet" />

<script src="~/DataTables (1)/datatables.js"></script>

<script src="~/DataTables (1)/pdfmake-0.1.36/pdfmake.js"></script>

<script src="~/DataTables (1)/pdfmake-0.1.36/vfs_fonts.js"></script>
<script src="~/DataTables (1)/JSZip-2.5.0/jszip.js"></script>
<script src="~/datepicker/dist/js/bootstrap-hijri-datetimepicker.js"></script>
<script type="text/javascript">


    $(function () {

        initHijrDatePicker();

        initHijrDatePickerDefault();

        $('.disable-date').hijriDatePicker({

            minDate: "2020-01-01",
            maxDate: "2023-01-01",
            viewMode: "years",
            hijri: true,
            debug: true,


        });

    });


    function initHijrDatePicker() {

        $(".hijri-date-input").hijriDatePicker({
            minDate: "2000-01-01",
            /*      maxDate:"2021-10-06",*/
            maxDate: new Date(new Date().setDate(new Date().getDate())),
            /*   endDate: new Date(new Date().setDate(new Date().getDate() + 5))*/
            /*   minDate: new Date(new Date().setDate(new Date().getDate() + 1))*/
            todayHighlight: true,
            //disabledDates: [new Date()],
            locale: "ar-sa",
            format: "YYYY-MM-DD",
            hijriFormat: "iYYYY-iMM-iDD",
            dayViewHeaderFormat: "MMMM YYYY",
            hijriDayViewHeaderFormat: "iMMMM iYYYY",
            showSwitcher: false,
            allowInputToggle: true,
            language: "AR",
            /* showTodayButton: false,*/
            useCurrent: true,
            isRTL: false,
            viewMode: 'months',
            keepOpen: false,
            hijri: true,
            debug: true,
            showClear: true,
            showTodayButton: true,
            showClose: true,
            /*     autoclose: true,*/




        });
    }

    function initHijrDatePickerDefault() {

        $(".hijri-date-default").hijriDatePicker();
    }

</script>