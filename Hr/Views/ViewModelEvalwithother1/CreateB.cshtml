@model IEnumerable<Hr.Models.ViewModelEvalwithother>

@{
    ViewData["Title"] = " بنك الأهداف الوظيفية  ";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    ul {
        margin: 0 0 15px 0;
    }

        ul li {
        }
</style>
@*<link href="https://www.jqueryscript.net/css/jquerysctipttop.css" rel="stylesheet" type="text/css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootswatch/4.3.1/flatly/bootstrap.min.css">*@
<link href="~/datepicker/dist/css/bootstrap-datetimepicker.css" rel="stylesheet" />
@*<div>
        <a asp-action="search1" class="btn btn-success">عرض الطلبات السابقة    </a>
    </div>*@
<h1>  بنك الأهداف الوظيفية  </h1>
<hr />
<p style="color:red">@ViewBag.msg</p>
<form id="f1">
    <div class="form-group">
        @*<label asp-for="CourcesId" class="control-label"></label>*@
        اختيار   الوظيفة من القائمة
        @*<input asp-for="CourcesId" class="form-control" />*@
        <select id="chosen-select16" class="chosen-select form-control chosen1" asp-items="ViewBag.Jobname" placeholder="اكتب الوظيفة">
            <option value="55">تحديد</option>
            @*<option value="00">كورس غير مدرج -اخر </option>*@
        </select>
        <span class="text-danger"></span>
        @*<p style="color:red">@ViewBag.ErrorMessage3</p>*@
    </div>
   
    <input type="submit" id="Btn1" @*asp-action="CreateB1" asp-controller="ViewModelEvalwithother1"*@ value="عرض " />
</form>
@*<div>
        <a asp-action="Index">Back to List</a>
    </div>*@
<br />
<br />
@*<table id="table" class="table table-bordered table-condensed table-striped table-hover sortable">
    <thead>
        <tr>
            <th>الهدف</th>
            <th>الوزن النسبي </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.AEvaluationGoal.CovenantGoalsName)

                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AEvaluationGoal.CovenantPercentageWeight)
                </td>
            </tr>
        }
    </tbody>
</table>*@

<div id="data"></div>
<div class='data'>

</div>
<table id="table1" class="table table-bordered table-condensed table-striped table-hover sortable">
    <thead>
        <tr>
            <th>الهدف</th>
            <th>الوزن النسبي </th>
        </tr>
    </thead>
    <tbody>
     
    </tbody>
</table>
<script>

    $(document).ready(function () {
        $('#table').DataTable({
            dom: 'Bfrtip',
            buttons: [
                /*'copy', 'csv', 'excel', 'pdf',*/ 'print'
            ],
            "language": {
                "emptyTable": "ليست هناك بيانات متاحة في الجدول",
                "loadingRecords": "جارٍ التحميل...",
                "processing": "جارٍ التحميل...",
                "lengthMenu": "أظهر _MENU_ مدخلات",
                "zeroRecords": "لم يعثر على أية سجلات",
                "info": "إظهار _START_ إلى _END_ من أصل _TOTAL_ مدخل",
                "infoEmpty": "يعرض 0 إلى 0 من أصل 0 سجل",
                "infoFiltered": "(منتقاة من مجموع _MAX_ مُدخل)",
                "search": "ابحث:",
                "paginate": {
                    "first": "الأول",
                    "previous": "السابق",
                    "next": "التالي",
                    "last": "الأخير"
                },
                "aria": {
                    "sortAscending": ": تفعيل لترتيب العمود تصاعدياً",
                    "sortDescending": ": تفعيل لترتيب العمود تنازلياً"
                },
                "select": {
                    "rows": {
                        "_": "%d قيمة محددة",
                        "0": "",
                        "1": "1 قيمة محددة"
                    },
                    "1": "%d سطر محدد",
                    "_": "%d أسطر محددة",
                    "cells": {
                        "1": "1 خلية محددة",
                        "_": "%d خلايا محددة"
                    },
                    "columns": {
                        "1": "1 عمود محدد",
                        "_": "%d أعمدة محددة"
                    }
                },
                "buttons": {
                    "print": "طباعة",
                    "copyKeys": "زر <i>ctrl<\/i> أو <i>⌘<\/i> + <i>C<\/i> من الجدول<br>ليتم نسخها إلى الحافظة<br><br>للإلغاء اضغط على الرسالة أو اضغط على زر الخروج.",
                    "copySuccess": {
                        "_": "%d قيمة نسخت",
                        "1": "1 قيمة نسخت"
                    },
                    "pageLength": {
                        "-1": "اظهار الكل",
                        "_": "إظهار %d أسطر"
                    },
                    "collection": "مجموعة",
                    "copy": "نسخ",
                    "copyTitle": "نسخ إلى الحافظة",
                    "csv": "CSV",
                    "excel": "Excel",
                    "pdf": "PDF",
                    "colvis": "إظهار الأعمدة",
                    "colvisRestore": "إستعادة العرض"
                },
                "autoFill": {
                    "cancel": "إلغاء",
                    "info": "مثال عن الملئ التلقائي",
                    "fill": "املأ جميع الحقول بـ <i>%d&lt;\\\/i&gt;<\/i>",
                    "fillHorizontal": "تعبئة الحقول أفقيًا",
                    "fillVertical": "تعبئة الحقول عموديا"
                },
                "searchBuilder": {
                    "add": "اضافة شرط",
                    "clearAll": "ازالة الكل",
                    "condition": "الشرط",
                    "data": "المعلومة",
                    "logicAnd": "و",
                    "logicOr": "أو",
                    "title": [
                        "منشئ البحث"
                    ],
                    "value": "القيمة",
                    "conditions": {
                        "date": {
                            "after": "بعد",
                            "before": "قبل",
                            "between": "بين",
                            "empty": "فارغ",
                            "equals": "تساوي",
                            "not": "ليس",
                            "notBetween": "ليست بين",
                            "notEmpty": "ليست فارغة"
                        },
                        "number": {
                            "between": "بين",
                            "empty": "فارغة",
                            "equals": "تساوي",
                            "gt": "أكبر من",
                            "gte": "أكبر وتساوي",
                            "lt": "أقل من",
                            "lte": "أقل وتساوي",
                            "not": "ليست",
                            "notBetween": "ليست بين",
                            "notEmpty": "ليست فارغة"
                        },
                        "string": {
                            "contains": "يحتوي",
                            "empty": "فاغ",
                            "endsWith": "ينتهي ب",
                            "equals": "يساوي",
                            "not": "ليست",
                            "notEmpty": "ليست فارغة",
                            "startsWith": " تبدأ بـ "
                        }
                    },
                    "button": {
                        "0": "فلاتر البحث",
                        "_": "فلاتر البحث (%d)"
                    },
                    "deleteTitle": "حذف فلاتر"
                },
                "searchPanes": {
                    "clearMessage": "ازالة الكل",
                    "collapse": {
                        "0": "بحث",
                        "_": "بحث (%d)"
                    },
                    "count": "عدد",
                    "countFiltered": "عدد المفلتر",
                    "loadMessage": "جارِ التحميل ...",
                    "title": "الفلاتر النشطة"
                },
                "searchPlaceholder": "ابحث ..."
            }
        });
    });

</script>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<link href="~/DataTables (1)/datatables.css" rel="stylesheet" />

<script src="~/DataTables (1)/datatables.js"></script>

<script src="~/DataTables (1)/pdfmake-0.1.36/pdfmake.js"></script>

<script src="~/DataTables (1)/pdfmake-0.1.36/vfs_fonts.js"></script>
<script src="~/DataTables (1)/JSZip-2.5.0/jszip.js"></script>
<link href="/PulseBeta/css/chosen.css" rel="stylesheet" type="text/css">
<link href="~/js/chosen.css" rel="stylesheet" />
<link href="/PulseBeta/css/prism.css" rel="stylesheet" type="text/css">
<link href="~/js/prism.css" rel="stylesheet" />
<script type="text/javascript" src="/PulseBeta/js/chosen.jquery.js"></script>
<script src="~/js/chosen.jquery.js"></script>
<script type="text/javascript" src="/PulseBeta/js/prism.js"></script>
<script src="~/js/prism.js"></script>
<script src="~/datepicker/dist/js/bootstrap-hijri-datetimepicker.js"></script>





<script type="text/javascript">

    $('#chosen-select16').append(new Option('اخري', 5));
    /* $('#chosen-select5').append(new Option('ممتاز +90 جيد جدا+80 جيد +70 مقبول +60', 0));*/
    $("#a").css('visibility', 'hidden');

    //function m() {
    //    if (document.getElementById("f1").files.length == 0) {
    //        console.log("لم يتم ارفاق شهادة الدورة ");
    //        alert("لم يتم ارفاق شهادة الدورة ");
    //    }

    //}

    var config = {
        '.chosen-select': {},
        '.chosen-select-deselect': { allow_single_deselect: true },
        '.chosen-select-no-single': { disable_search_threshold: 10 },
        '.chosen-select-no-results': { no_results_text: 'Oops, nothing found!' },
        '.chosen-select-width': { width: "95%" }//,
        //'.chosen-search': {disable_search: false}
    }
    for (var selector in config) {
        $(selector).chosen(config[selector]);
    }
    $("select.chosen11").change(function () {

        var selectedCountry11 = $(this).children("option:selected").val();
        /*      var selectedCountry1=$("#chosen-select16 option:selected").val();*/
        if (selectedCountry11 == 2) {
            alert("  يرجي اختيار التقدير  - ");
            $("#a").css('visibility', 'visible');
            var hiddenBox = $("#respond-2");
            hiddenBox.show();



        }
        else {
            $("#a").css('visibility', 'hidden');
            var hiddenBox = $("#respond-2");
            hiddenBox.hide();

        }
    });

    $("select.chosen1").change(function () {
        var selectedCountry = $(this).children("option:selected").val();
        /*      var selectedCountry1=$("#chosen-select16 option:selected").val();*/
        if (selectedCountry == 200) {
            alert("  يرجي ادخال اسم الدورة الجديد باالاسفل - ");

            var hiddenBox = $("#respond-1");
            hiddenBox.show();



        }
        else {
            var hiddenBox = $("#respond-1");
            hiddenBox.hide();

        }
    });
    $("select").change(function () {
        var selected5 = $(this).children("option:selected").val();
        /*      var selectedCountry1=$("#chosen-select16 option:selected").val();*/
        if (selected5 == 0) {
            alert("لايتم اختيار هذا العنصر  - ");

        }
    });
    jQuery(document).ready(function () {
        $("#chosen-select16").change(function () {
            $.getJSON({
                url: "ViewModelEvalwithother1/CreateB",
                data: 'selectedtTime=' + $(this).val(), // Send value of the drop down change of option
                dataType: 'json', // Choosing a JSON datatype
                success: function (data) {
                    // Variable data contains the data you get from the action method
                    if (data.length > 0) {
                        $("[id*=table] tbody").empty();
                        var row;
                        $.each(response, function (index, item) {
                            row += "<tr><td>" + item.aEvaluationGoal.covenantGoalsName + "</td><td>" + item.aEvaluationGoal.covenantPercentageWeight + "</td></tr>"
                        })
                        $("[id*=table] tbody").append(row);
                    }
                    alert("Selected value: " + data);



                }
            });
        });
    });
    $(function () {
        $('#f1').submit(function () {
           
        var select = $("#chosen-select16 option:selected").val();
        var row1;

        $.ajax({
        url: '@Url.Action("CreateB", "ViewModelEvalwithother1")' + "/" + select,
        type: this.method,
          data: { 'selectedtTime': select },
          dataType: 'json',
          success: function (response) {
              // Variable data contains the data you get from the action method
              var tb = document.getElementById('table1');
              while (tb.rows.length > 1) {
                  tb.deleteRow(1);
              }
              var data = response.surrey;
              if (response.length > 0) {
                  // your code within the success callback
                  $("[id*=table1] tbody").empty();
                  var row;
                  $.each(response, function (index, item) {
                      row += "<tr><td>" + item.aEvaluationGoal.covenantGoalsName + "</td><td>" + item.aEvaluationGoal.covenantPercentageWeight + "</td></tr>"
                  })
                  for (i = 0; i < data.length; i++) {

                      row += "<tr><td>" + data.aEvaluationGoal.covenantGoalsName + "</td><td>" + data.aEvaluationGoal.covenantPercentageWeight + "</td></tr>"
                  }
                 
                  $("[id*=table] tbody").append(row);
              }
              for (var i = 0; i < response.data.length; i++) {
                 /* alert(response.data[i].aEvaluationGoal.covenantGoalsName);*/
                  row1 += "<tr><td>" + response.data[i].aEvaluationGoal.covenantGoalsName + "</td><td>" + response.data[i].aEvaluationGoal.covenantPercentageWeight + "</td></tr>"
              }
              $("[id*=table1] tbody").append(row1);
              //alert("Selected value: " + response.data[2].aEvaluationGoal.covenantGoalsName);
              //alert("Selected value: " + response.data);
              //alert("Selected value: " + response.length);
              //alert("Selected value: " + data.aEvaluationGoal.covenantGoalsName);
              var tBody = $("#example1 > TBODY")[0];
              var row = tBody.insertRow(-1);

              //Add ID cell.
              var cell = $(row.insertCell(0));
              cell.html(response.id);
              //Add Nombre cell.
              cell = $(row.insertCell(1));
              cell.html(response.nombre);
              //Add Precio cell.
              cell = $(row.insertCell(2));
              cell.html(response.precio);
              /*  console.log(response.data);*/
              var data = response.surrey;
              var $data = $('#data');
              data.forEach(function (item) {
                  var $ul = $('<ul></ul>');
                  for (var field in item) {
                      $ul.append(`<li>${field}: ${item[field]}</li>`)
                  }
                  $data.append($ul);
              });
              data = response.surrey;
              var html = '';
              var i;
              for (i = 0; i < data.length; i++) {
                  alert("Selected value: " + data.length + data[i]);
                  html += '<span>' + data[i] + '</span>';
                  html += '<span>' + data[i].AEvaluationGoal.CovenantGoalsName + '</span>';
                  //so on
              }
              $('#data').html(html);


        }

        });
        @*$.ajax({
           url: '@Url.Action("CreateB", "ViewModelEvalwithother1")' + "/" + select,
        type: this.method,
          data: { 'selectedtTime': select },
          dataType: 'json',
            success: function (response) {
                alert("success response -----" + response.data[2].aEvaluationGoal.covenantGoalsName);//=> undefined
                // Variable data contains the data you get from the action method
                var data = response.surrey;
                if (response.length > 0) {
                    $("[id*=table] tbody").empty();
                    var row;
                    jQuery.each(response, function (index, item) {
                        row += "<tr><td>" + item[index].aEvaluationGoal.covenantGoalsName + "</td><td>" + item[2].aEvaluationGoal.covenantPercentageWeight + "</td></tr>"
                    })
                    for (i = 0; i < data.length; i++) {

                        row += "<tr><td>" + data[i].aEvaluationGoal.covenantGoalsName + "</td><td>" + data[i].aEvaluationGoal.covenantPercentageWeight + "</td></tr>"
                    }
                    $("[id*=table] tbody").append(row);
                }
               

            }, error: function (response) {
                alert("error---" + response);

            }
        });*@
      return false;
    });
});
    function cardTypeId_OnChange() {
        //Prompt for confirmation
        if (confirm("هل تريد البحث بهذة المهنة  ؟")) {
            //Your AJAX call that corresponds with the href attribute of your link
            var selectedCountry1 = $("#chosen-select16 option:selected").val();
            $.ajax({
                url: '/ViewModelEvalwithother1/CreateB',
                type:post,
                data: {
                    i: selectedCountry1.val(),
                    I: $("#chosen-select16").val(),
                },
            }).done(function () {
                //Item created!
                $("#p1").show();
                $("#cc1").hide();
                $("#ii1").hide();
                $("#ii0").hide();
                $(".AddSection").hide();
                alert("تم  !");
            });
            //This prevents the default behavior of the actual link (it will hit your controller action)
            return false;
        }
        else {
            alert(" تم الغاء التعديل !");
            //Unconfirmed - cancel any further actions
            return false;
        }
    }
    //$("select.chosen1").change(function () {
    //    /*  var selected5 = $(this).children("option:selected").val();*/
    //    var selectedCountry1 = $("#chosen-select16 option:selected").val();


    //     alert("يجب ان يكون مجموع الوزن النسبي 100%  - ");


    //});
    $("select.chosen2").change(function () {
        /*var selected5 = $(this).children("option:selected").val();*/
        /*      var selectedCountry1=$("#chosen-select16 option:selected").val();*/

        /*alert("يجب ان يكون مجموع الوزن النسبي 100%  - ");*/


    });


</script>
<script language="javascript" type="text/javascript">
    $(document).ready(function () {
        try {
            $("input[type='text']").each(function () {
                $(this).attr("autocomplete", "off");
            });
        }
        catch (e) { }
    });

</script>



<script type="text/javascript">


    $(function () {

        initHijrDatePicker();

        initHijrDatePickerDefault();

        $('.disable-date').hijriDatePicker({

            minDate: "2020-01-01",
            maxDate: "2021-01-01",
            viewMode: "years",
            hijri: true,
            debug: true
        });

    });


    function initHijrDatePicker() {

        $(".hijri-date-input").hijriDatePicker({
            locale: "ar-sa",
            format: "YYYY-MM-DD",
            hijriFormat: "iYYYY-iMM-iDD",
            dayViewHeaderFormat: "MMMM YYYY",
            hijriDayViewHeaderFormat: "iMMMM iYYYY",
            showSwitcher: false,
            allowInputToggle: true,
            showTodayButton: false,
            useCurrent: true,
            isRTL: false,
            viewMode: 'months',
            keepOpen: false,
            hijri: true,
            debug: true,
            showClear: true,
            showTodayButton: true,
            showClose: true
        });
    }

    function initHijrDatePickerDefault() {

        $(".hijri-date-default").hijriDatePicker();
    }

</script>
<script type="text/javascript">

    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-36251023-1']);
    _gaq.push(['_setDomainName', 'jqueryscript.net']);
    _gaq.push(['_trackPageview']);

    (function () {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();

</script>
<script>
    try {
        fetch(new Request("https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js", { method: 'HEAD', mode: 'no-cors' })).then(function (response) {
            return true;
        }).catch(function (e) {
            var carbonScript = document.createElement("script");
            carbonScript.src = "//cdn.carbonads.com/carbon.js?serve=CK7DKKQU&placement=wwwjqueryscriptnet";
            carbonScript.id = "_carbonads_js";
            document.getElementById("carbon-block").appendChild(carbonScript);
        });
    } catch (error) {
        console.log(error);
    }
</script>


