<?xml version="1.0" encoding="utf-8" ?>
<nlog
    xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
autoReload="true" throwExceptions="false"
internalLogFile="C:\NLogErrors\log.txt" >
	<extensions>
		<!-- load NLog.Extended to enable ASP.NET-specific functionality -->
		<add assembly="NLog.Extended" />
	</extensions>
	<!--Define Various Log Targets-->
	<targets >
		<target name="console" xsi:type="ColoredConsole"
layout="${message}" />
		<!--Write logs to File-->
		<target name="file" xsi:type="File" fileName="C:\NLogErrors\ErrorLogFile.log"
layout="  
--------------------- ${level}(${longdate})${machinename}-------------------- ${newline}  
${newline}  
Exception Type:${exception:format=Type}${newline}  
Exception Message:${exception:format=Message}${newline}  
Stack Trace:${exception:format=Stack Trace}${newline}  
Additional Info:${message}${newline}  
" ></target>
		<!--Write Logs to Database-->
		<target xsi:type="Database" name="db-Details">
			<!-- SQL command to be executed for each entry -->
			<commandText>
				INSERT INTO [NLog_Error](TimeStamp,Level,Host,Type,Logger,Message,stackTrace)
				VALUES(@TimeStamp,@level,@host,@type,@logger,@message,@stacktrace)
			</commandText>
			<!-- parameters for the command -->
			<parameter name="@TimeStamp" layout="${date}" />
			<parameter name="@level" layout="${level}" />
			<parameter name="@host" layout="${machinename}" />
			<parameter name="@type" layout="${exception:format=type}" />
			<parameter name="@logger" layout="${logger}" />
			<parameter name="@message" layout="${message}" />
			<parameter name="@stacktrace" layout="${exception:stacktrace}" />
			<!-- connection string -->
			<dbProvider>System.Data.SqlClient</dbProvider>
			<connectionString>Server=QMAPPS;Database=hr; user id=sa;password=sa123456789$;Trusted_Connection=False; </connectionString>
		</target>
		<target name="database" xsi:type="Database">
			<commandText> insert into ExceptionLog ([TimeStamp],[Level],Logger, [Message], UserId, Exception, StackTrace) values (@TimeStamp, @Level, @Logger, @Message, case when len(@UserID) = 0 then null else @UserId end, @Exception, @StackTrace); </commandText>
			<parameter name="@TimeStamp" layout="${date}" />
			<parameter name="@Level" layout="${level}" />
			<parameter name="@Logger" layout="${logger}" />
			<parameter name="@Message" layout="${message}" />
			<parameter name="@UserId" layout="${mdc:user_id}" />
			<parameter name="@Exception" layout="${exception}" />
			<parameter name="@StackTrace" layout="${stacktrace}" />
			<dbProvider>System.Data.SqlClient</dbProvider>
			<connectionString>Server=QMAPPS;Database=hr; user id=sa;password=sa123456789$;Trusted_Connection=False; </connectionString>
		</target>
		<!--<target name="eventlog" xsi:type="EventLog" layout="${message}" log="Application" source="hr" />-->



	</targets>
	<!--End Targets-->
	<rules>
		<logger name="*" minlevel="trace" writeTo="file" />
		<logger name="*" minlevel="trace" writeTo="db-Details" />
		<logger name="*" minlevel="trace" writeTo="database" />
		<!--<logger name="*" minlevel="Trace" writeTo="eventlog" />-->
	</rules>
</nlog>
